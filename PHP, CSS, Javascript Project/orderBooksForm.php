<?php
/**
 * Created by PhpStorm.
 * User: Adapted by Sam Noble - w16006438
 * Date: 23/11/2017
 * Time: 16:50
 */
//include the functions and page class
require_once ('functions.php');
require_once ('nbcPage.class.php');
//include sessions on this page
includeSession();
//define footer text
$footerText = "<p>Northumbria Book Company, Created 
by Sam Noble - w16006438 for KF5002 Assignment</p>";
//define the links and aliases to the nav bar
$navLinks = array('index.php'=>'Home',
    'bookList.php'=>'Book List', 'orderBooksForm.php'=>'Order Books',
    'credits.php'=>'Credits');
if(checkLogin()){
    //set the login function to logout
    $actionName = "logoutProcess.php";
}
else{
    //set the login function to login
    $actionName = "loginProcess.php";
}
//initialise the page instance
$page = new webPage("Book Events", "nbcStyle.css", $navLinks,
    "Buy Books", $footerText, $actionName, "nbcLogo.png", "NBC Logo");

/* This code dynamically generates a web page containing a form designed with the html required to display one
checkbox for each of the books currently held in the nbc_books database table has been provided for you in the
assessment section for the module on blackboard. The user can select one or more books that they are interested in
ordering by clicking the checkboxes.
Use the browser to look at the structure of the html generated by the php code. */

$url = "http://unn-izge1.newnumyspace.co.uk/KF5002/assessment/orderBooksFormInc.php";
$curl = curl_init($url);
curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
$result = curl_exec($curl);
curl_close($curl);
//echo $result; This doesn't work with webpage classes
//instead use:
//add result to page
$page->addToMain($result);
//create variable to store heredoc of scripts
$scripts = <<<SCRIPTS
<!-- Here you need to add Javascript or a link to a script to process the form as required for the assignment -->
<script type="text/javascript">
    //<![CDATA[
    'use strict';
    //find and remove main h1 tag - page class already creates a h1
    document.querySelector('main h1').remove();
    //call initialise function upon window load
    window.addEventListener('load', function initialise(){
        //get orderForm as an object variable
        var form = document.getElementById('orderForm');
        //set total textbox to 0.00
        form.total.value = "0.00";
        //hide retail customer input
        form.querySelector('#retCustDetails').style.visibility = "hidden";
        //perform these functions when there is change on the form
        form.addEventListener('change', canSubmit);
        //check if the user input when they change the value of any textbox
        //stops users from retracting data and submitting
        form.surname.addEventListener('change', canSubmit);
        form.forename.addEventListener('change', canSubmit);
        form.companyName.addEventListener('change', canSubmit);

        /*
        checks the user input is valid
        enables button if user input is valid
        disables button if user input is invalid
        @param e - event object
         */
        function canSubmit(e) {
            //check each user input
            var itemsValid = calculateTotal();
            var termsValid = checkAgreement();
            var custDetailsValid = custTypeHandle();
            //get submit button
            var button = form.submit;
            //check if user input is valid
            if(itemsValid && termsValid && custDetailsValid){
                //enable button
                button.disabled = false;
            }
            else{ //disable button
                button.disabled = true;
            }
        }

        /*
         function calculates the total of books checked
         @returns true if the user has check one or more boxes
         */
        function calculateTotal() {
            //create valid flag
            var valid = false;
            //make variable to hold the collective total of values checked
            var total = 0.00;
            //get all elements with the class 'item' and is a checked checkbox
            var checkBoxElements = form.querySelectorAll
            ('.item input[type=checkbox]:checked');
            //get the total text box as an object
            var totalTextBox = form.total;
            //create counter
            var counter;
            //add the price of every checked checkbox to the total
            for (counter = 0; counter < checkBoxElements.length; counter += 1) {
                var currentCheckBox = checkBoxElements[counter];
                total = total + parseFloat(currentCheckBox.dataset.price);
            }
            if (checkBoxElements.length > 0) {
                total = total + calcDeliveryCost();
                valid = true;
            }
            totalTextBox.value = total.toFixed(2);
            return valid;
        }

        /*
         this calculates the cost of delivery
         @returns the value of delivery
         */
        function calcDeliveryCost() {
            //create total variable
            var total = 0.00;
            //get every radio button that is checked
            var radioButtonElements = form.querySelectorAll('input[type=radio]:checked');
            //create counter variable
            var counter;
            //loop through all checked radio buttons
            for (counter = 0; counter < radioButtonElements.length; counter += 1) {
                //get current radio button as a variable
                var currentRadio = radioButtonElements[counter];
                //increase total by the price value
                total = total + parseFloat(currentRadio.dataset.price);
            }
            //return the overall total
            return total;
        }

        /*
         Handles the appearance of the form when the select box value changes
         @return true if the user has input valid data for the textbox
         */
        function custTypeHandle() {
            //get select as variable
            var selectBox = form.customerType;
            //get retCustDetails and tradeCustDetails visibility
            var retCustDiv = form.querySelector('#retCustDetails');
            var tradeCustDiv = form.querySelector('#tradeCustDetails');
            if (selectBox.value === "") {
                //hide all inputs
                retCustDiv.style.visibility = "hidden";
                tradeCustDiv.style.visibility = "hidden";
                return false;
            }
            else if (selectBox.value === "ret") {
                //hide trade input
                tradeCustDiv.style.visibility = "hidden";
                //show customer input
                retCustDiv.style.visibility = "visible";
                //get forename and surname input (avoids altering users input)
                var forename = form.forename.value;
                var surname = form.surname.value;
                //remove white space and check forename input is empty
                if(forename.split(' ').join('') === ""){
                    //indicate invalid data
                    return false;
                }
                //remove white space and check surname input is empty
                if(surname.split(' ').join('') === ""){
                    //indicate invalid data
                    return false
                }
                //indicate valid data
                return true;
            }
            else if (selectBox.value === "trd") {
                //hide customer input
                retCustDiv.style.visibility = "hidden";
                //show trade input
                tradeCustDiv.style.visibility = "visible";
                //get value of company name input
                var input = form.companyName.value;
                //remove white space and check companyName input isn't blank
                if(input.split(' ').join('') === ""){
                    //indicate invalid data
                    return false;
                }
                //indicate valid data
                return true;
            }
        }

        /*
         function performs appropriate action when terms is checked/unchecked
         @returns true if the user has checked the box and false if not
         */
        function checkAgreement() {
            //get the terms checkbox as an object
            var termsCheckBox = form.termsChkbx;
            //get the terms text as an object
            var termsText = form.querySelector('#termsText');
            //check if checkbox is checked
            if (termsCheckBox.checked) {
                //set terms text to be black and remove the bold
                termsText.style.color = 'black';
                termsText.style.fontWeight = 'normal';
                return true;
            }
            else {
                //set terms text to be red and bold
                termsText.style.color = 'red';
                termsText.style.fontWeight = 'bold';
                return false;
            }
        }
    });
    //]]>
</script>
SCRIPTS;
//add new line char to end of scripts
$scripts.="\n";
//add scripts to page
$page->addToBody($scripts);
//display page
echo $page->getPage();
?>
